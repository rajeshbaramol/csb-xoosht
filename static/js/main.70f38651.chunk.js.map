{"version":3,"sources":["App.js","index.js"],"names":["App","className","CheckboxInput","children","checked","setChecked","type","onChange","e","target","Checkbox","useState","React","Children","map","child","cloneElement","Label","this","props","onClick","Component","rootElement","document","getElementById","createRoot","render"],"mappings":"wMAGe,SAASA,IACtB,OACE,sBAAKC,UAAU,MAAf,UACE,+BACE,2EACA,+EAEF,eAAC,EAAD,WACE,cAAC,EAAD,IACA,cAAC,EAAD,6BAKR,IAAMC,EAAgB,SAAC,GAAsC,EAApCC,SAAqC,IAA3BC,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,WAC1C,OACE,uBACEC,KAAK,WACLF,QAASA,EACTG,SAAU,SAACC,GAAD,OAAOH,EAAWG,EAAEC,OAAOL,aAIrCM,EAAW,SAAC,GAAkB,IAAhBP,EAAe,EAAfA,SAClB,EAA8BQ,oBAAS,GAAvC,mBAAOP,EAAP,KAAgBC,EAAhB,KAQA,OAPYO,IAAMC,SAASC,IAAIX,GAAU,SAACY,GAKxC,OAJYH,IAAMI,aAAaD,EAAO,CACpCX,UACAC,mBAMAY,E,4JACJ,WACE,MAA0CC,KAAKC,MAAvChB,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,QAASC,EAA3B,EAA2BA,WAC3B,OACE,uBAAOD,QAASA,EAASgB,QAAS,kBAAMf,GAAYD,IAApD,SACGD,Q,GALWS,IAAMS,WChCpBC,EAAcC,SAASC,eAAe,QAC/BC,qBAAWH,GAEnBI,OACH,cAAC,aAAD,UACE,cAAC1B,EAAD,S","file":"static/js/main.70f38651.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport \"./styles.css\";\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <ul>\n        <li>Passing properties by cloning the element</li>\n        <li>click on checkbox or label it get selected</li>\n      </ul>\n      <Checkbox>\n        <CheckboxInput />\n        <Label>Checkbox</Label>\n      </Checkbox>\n    </div>\n  );\n}\nconst CheckboxInput = ({ children, checked, setChecked }) => {\n  return (\n    <input\n      type=\"checkbox\"\n      checked={checked}\n      onChange={(e) => setChecked(e.target.checked)}\n    />\n  );\n};\nconst Checkbox = ({ children }) => {\n  const [checked, setChecked] = useState(false);\n  const all = React.Children.map(children, (child) => {\n    let clone = React.cloneElement(child, {\n      checked,\n      setChecked\n    });\n    return clone;\n  });\n  return all;\n};\nclass Label extends React.Component {\n  render() {\n    const { children, checked, setChecked } = this.props;\n    return (\n      <label checked={checked} onClick={() => setChecked(!checked)}>\n        {children}\n      </label>\n    );\n  }\n}\n","import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);\n"],"sourceRoot":""}